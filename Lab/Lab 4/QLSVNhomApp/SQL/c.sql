--c.sql
USE QLSVNhom
GO

---- i. Stored dùng để thêm nhân viên
IF EXISTS (SELECT 1 FROM sys.procedures WHERE name = 'SP_INS_PUBLIC_NHANVIEN')
BEGIN
    DROP PROCEDURE SP_INS_PUBLIC_NHANVIEN;
END
GO

CREATE PROCEDURE SP_INS_PUBLIC_NHANVIEN
    @MANV NVARCHAR(20),
    @HOTEN NVARCHAR(100),
    @EMAIL NVARCHAR(100),
    @LUONGCB VARBINARY(MAX),     -- RSA encrypted, base64 string
    @TENDN NVARCHAR(100),
    @MK VARBINARY(MAX),          -- SHA1 hashed password (hex string)
	@PUBKEY VARCHAR(MAX),
    @ErrorMessage NVARCHAR(200) OUTPUT
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        -- Kiểm tra nếu nhân viên đã tồn tại
        IF EXISTS (SELECT 1 FROM NHANVIEN WHERE MANV = @MANV)
        BEGIN
            SET @ErrorMessage = N'Mã nhân viên đã tồn tại.';
            RETURN;
        END
		DECLARE @SQL NVARCHAR(MAX);
		-- Kiểm tra nếu Asymmetric Key đã tồn tại
		IF NOT EXISTS (SELECT 1 FROM sys.asymmetric_keys WHERE name = @MANV)
		BEGIN
			-- Tạo Asymmetric Key riêng cho nhân viên
			SET @SQL = 'CREATE ASYMMETRIC KEY ' + @MANV+
	' WITH ALGORITHM = RSA_2048 ENCRYPTION BY PASSWORD = '''+@MK+''''
			EXEC sp_executesql @SQL;
		END

        -- Thêm dữ liệu vào bảng NHANVIEN
        INSERT INTO NHANVIEN (MANV, HOTEN, EMAIL, LUONG, TENDN, MATKHAU, PUBKEY)
        VALUES (@MANV, @HOTEN, @EMAIL, @LUONGCB, @TENDN, @MK, @PUBKEY);

        SET @ErrorMessage = N''; -- OK
    END TRY
    BEGIN CATCH
        SET @ErrorMessage = ERROR_MESSAGE();
    END CATCH
END
GO

---- LAB 3 ii. Stored dùng để truy vấn dữ liệu nhân viên (NHANVIEN)
IF EXISTS (SELECT 1 FROM sys.procedures WHERE name = 'SP_SEL_PUBLIC_NHANVIEN')
BEGIN
    DROP PROCEDURE SP_SEL_PUBLIC_NHANVIEN;
END
GO

CREATE PROCEDURE SP_SEL_PUBLIC_NHANVIEN
    @TENDN NVARCHAR(100),
    @MK NVARCHAR(100)
AS
BEGIN
    SET NOCOUNT ON;
	DECLARE @HASHED_PASSWORD VARBINARY(100);
	DECLARE @MANV VARCHAR(20);

    SET @HASHED_PASSWORD = HASHBYTES('SHA1', @MK);
    SELECT @MANV = MANV FROM NHANVIEN WHERE TENDN = @TENDN AND MATKHAU = @HASHED_PASSWORD;
    IF @MANV IS NULL
    BEGIN
        RAISERROR('Incorrect TENDN or MK', 16, 1);
        RETURN;
    END

    -- Kiểm tra nếu Asymmetric Key tồn tại
    IF NOT EXISTS (SELECT 1 FROM sys.asymmetric_keys WHERE name = @MANV)
    BEGIN
        RAISERROR('RSA key doesnt exist', 16, 1);
        RETURN;
    END

    -- Giải mã lương
    SELECT 
        MANV,
        HOTEN,
        EMAIL,
        CONVERT(INT,CONVERT(VARCHAR,DECRYPTBYASYMKEY(ASYMKEY_ID(@MANV), LUONG, @MK))) AS LUONGCB
    FROM NHANVIEN
    WHERE TENDN = @TENDN AND MATKHAU = @HASHED_PASSWORD;
END
GO

---- LAB 4 ii. Stored dùng để truy vấn dữ liệu nhân viên còn mã hóa (NHANVIEN)
IF OBJECT_ID('SP_SEL_PUBLIC_ENCRYPT_NHANVIEN', 'P') IS NOT NULL
    DROP PROCEDURE SP_SEL_PUBLIC_ENCRYPT_NHANVIEN;
GO

CREATE PROCEDURE SP_SEL_PUBLIC_ENCRYPT_NHANVIEN
    @TENDN NVARCHAR(100),
    @MK VARBINARY(MAX)
AS
BEGIN
    SET NOCOUNT ON;

    SELECT MANV, HOTEN, EMAIL, LUONG
    FROM NHANVIEN
    WHERE MANV = @TENDN AND MATKHAU = @MK;
END
GO

